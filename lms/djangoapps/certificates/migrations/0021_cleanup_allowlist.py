# Generated by Django 2.2.19 on 2021-02-24 14:48

from django.db import migrations


class Migration(migrations.Migration):
    """
    Cleanup users that appear on both the certificate exception and certificate invalidation lists.
    """

    def clean_up_allowlist(apps, schema_editor):
        """
        Retrives all active certificate invalidations and checks if there is also an allowlist entry for the learner.
        If so, then we remove the allowlist entry and make sure the certificate is invalidated for the learner as well.
        """
        GeneratedCertificate = apps.get_model('certificates', 'GeneratedCertificate')
        CertificateInvalidation = apps.get_model('certificates', 'CertificateInvalidation')
        CertificateWhitelist = apps.get_model('certificates', 'CertificateWhitelist')

        active_invalidations = CertificateInvalidation.objects.filter(active=True)

        for invalidation in active_invalidations:
            #import pdb; pdb.set_trace()
            cert = GeneratedCertificate.objects.get(id=invalidation.generated_certificate_id)
            allowlist_entry = CertificateWhitelist.objects.get(user_id=cert.user_id, course_id=cert.course_id)

            if allowlist_entry:
                cert.invlidate()
                allowlist_entry.delete()

    dependencies = [
        ('certificates', '0020_remove_existing_mgmt_cmd_args'),
    ]

    operations = [
        migrations.RunPython(clean_up_allowlist, reverse_code=migrations.RunPython.noop)
    ]
